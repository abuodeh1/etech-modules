<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Scans for components that will be auto-registered as Spring beans -->
	<context:component-scan base-package="ecapture" />
	<!-- Scans for repositories that will be auto-registered -->
	<jpa:repositories base-package="ecapture" />
	<!-- Activates various annotations to be detected in bean classes e.g: @Autowired -->
	<context:annotation-config />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db-config.properties</value>
			</list>
		</property>
	</bean>

	<!-- JPA -->

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="connectionTestQuery" value="SELECT 1 FROM DUAL" />
		<property name="dataSourceClassName" value="${driverClassName}" />
		<property name="maximumPoolSize" value="${maximumPoolSize}" />
		<property name="idleTimeout" value="${idleTimeout}" />
		<property name="dataSourceProperties">
			<props>
				<prop key="url">${jdbcUrl}</prop>
				<prop key="user">${dataSource.user}</prop>
				<prop key="password">${dataSource.password}</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

<!-- 	 <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			see also http://forum.springframework.org/showthread.php?t=52232
			<list>
				<value>classpath:META-INF/persistence.xml</value>
			</list>
		</property>

		if no datasource is specified, use this one
		<property name="defaultDataSource" ref="dataSource" />
	</bean> -->

	<!-- EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:packagesToScan="ecapture.model" p:dataSource-ref="dataSource">
		
		<!-- <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" /> -->
        <!-- <property name="persistenceUnitName" value="eCaptureOracle" />    -->   
        
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		 <property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2dll.auto">create-drop</prop>
                <prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
		
	</bean>

	 <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

	<!-- Transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect" ref="jpaDialect"/>
	</bean>
		
</beans>